# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# See: https://circleci.com/docs/2.0/configuration-reference
# See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
# See: https://circleci.com/docs/2.0/configuration-reference/#steps
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows

version: 2.1

default_context: &context
  context:
    - dockerhub

default_requires: &setup
  <<: *context
  requires:
    - setup

default_machine: &machine
  machine:
    image: ubuntu-2004:current

executors:
  x86-small:
    <<: *machine
    resource_class: small
  arm:
    <<: *machine
    resource_class: arm.medium
  arm-large:
    <<: *machine
    resource_class: arm.large

jobs:
  setup:
    executor: arm
    steps:
      - checkout
      - run:
          name: Install ansible
          command: pip3 install ansible jmespath
      - run:
          name: Setup
          command: make setup
          environment:
            DOCKER_PUSH: "true"
            DOCKER_LATEST: "true"
      - persist_to_workspace:
          root: .
          paths:
            - data

  build_and_push:
    parameters:
      target:
        description: Target repository to build
        type: string
      executor:
        type: executor
    executor: << parameters.executor >>

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Docker login
          command: docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_TOKEN
      - run:
          name: Build and push
          command: make -C data build_<< parameters.target >>



workflows:
  default:
    when:
      equal: [ main, << pipeline.git.branch >> ]

    jobs:
      - setup:
          *context

      - build_and_push:
          <<: *setup
          executor: arm
          matrix:
            parameters:
              target: ["tianon_exim4", "snuba"]

      - build_and_push:
          <<: *setup
          executor: arm-large
          name: build-<< matrix.target >>
          matrix:
            parameters:
              target: ["sentry", "sentry-cli"]

      - build_and_push:
          <<: *context
          executor: arm-large
          name: build-<< matrix.target >>
          requires:
            - build-sentry-cli
          matrix:
            parameters:
              target: ["relay", "symbolicator"]



