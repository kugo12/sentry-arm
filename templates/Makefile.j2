{% set items = build | dict2items %}

{% for item in (items | json_query("[?type(value.non_generic_build) == 'null']")) %}
{% set context = item.key + "/" + (item.value.cd | default(".")) %}
{% set tag, version = user_tag + item.key, item.value.tag | default(item.value.checkout) %}
{% set tag_latest = ("-t " + tag + ":latest") if docker_latest else "" %}

build_{{ item.key }}:
	docker buildx build --progress=plain {{ docker_push }} --platform arm64 {{ tag_latest }} -t {{ tag }}:{{ version }} {{ context }}
{% endfor %}

build_sentry:
	cd sentry && docker buildx build --progress=plain --platform linux/arm64 -t sentry_builder -f docker/builder.dockerfile .
	docker run --rm --platform linux/arm64 -v $(shell pwd)/sentry:/workspace sentry_builder
	cd sentry && docker buildx build --progress=plain {{ docker_push }} --platform linux/arm64 {{ ("-t " + user_tag + "sentry:latest") if docker_latest else "" }} -t {{ user_tag }}sentry:{{ build.sentry.checkout }} -f docker/Dockerfile .
